
### Parameters you MUST set

# path to directory containing fastq files
samples:
  WT_1: data/fastq/WT_1
  WT_2: data/fastq/WT_2
  WT_ctl: data/fastq/WT_ctl
  KO_1: data/fastq/KO_1
  KO_2: data/fastq/KO_2
  KO_ctl: data/fastq/KO_ctl

# location of annotation gtf file
annotation: data/annotation/mini_GRCh38.gtf

# -s4U control sample IDs
control_samples: ['WT_ctl', 'KO_ctl']

# location of genome fasta file
genome_fasta: data/genome/Homo_sapiens.GRCh38.dna.chr.fa

# location of hisat2 indices
HISAT2: data/hisat2/grch38_tran/genome_tran

# location of hisat3n indices
HISAT_3N: data/hisat_3n/GRCh38

### Parameters you should probably double check

# If TRUE, hisat-3n will be used for alignment
use_hisat3n: FALSE

# If TRUE STAR will be used for alignment
use_star: FALSE

# If use_hisat3n TRUE, then this specifies path to hisat_3n executable
hisat3n_path: hisat-3n

# Format of reads
FORMAT: "PE" # (PE, SE, NU)
                    # [SE - single end reads]
                    # [NU - including non-unique] (not tested)


# Strandedness of reads
strandedness: "F" # (F, R); F means read 1 represents original RNA sequence (vs. its reverse complement).


# Type of browser tracks to generate
mut_tracks: "TC" # ("TC", "GA", "TC,GA")

# Add a 'chr' to each chromosome number during alignment. [Useful when aliner index is number-based, but GTF annotation is chr-based]
chr_tag: "TRUE"

# Minimum base quality to call mutation
minqual: 40

# Which columns to keep in final cB.csv.gz file
keepcols: "sample,sj,io,ei,ai,GF,XF,rname"

# Adapter sequence, read 1 (or only one if single-end)
adapter1: "AGATCGGAAGAGC"

# Reverse adapter (only for paired-end)
adapter2: "AGATCGGAAGAGC"

# Are you using the Windows subsystem for linux? 0 = Yes, 1 = No
WSL: 1
