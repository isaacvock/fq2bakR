
### Parameters you MUST set

# location of fastq files
#samples:
#  WT_1: data/samples/DCP2_subsample1
#  WT_2: data/samples/DCP2_subsample2
#  WT_ctl: data/samples/DCP2_subsamplectl
 
samples:
  WT_1: ../../Quick_Pipeline/fastq/WT_1
  WT_2: ../../Quick_Pipeline/fastq/WT_2
  WT_ctl: ../../Quick_Pipeline/fastq/WT_ctl
  KO_1: ../../Quick_Pipeline/fastq/KO_1
  KO_2: ../../Quick_Pipeline/fastq/KO_2
  KO_ctl: ../../Quick_Pipeline/fastq/KO_ctl  

# location of annotation gtf file
annotation: ../TL-Snakemake/data/annotation/Homo_sapiens.GRCh38.104.chr_chr.gtf

# -s4U control sample IDs
control_samples: ['WT_ctl', 'KO_ctl']

# location of genome fasta file
genome_fasta: ../TL-Snakemake/data/genome/Homo_sapiens.GRCh38.dna.chr.fa

# location of hisat2 indices
HISAT2: data/hisat2/grch38_tran/genome_tran

# location of hisat3n indices
HISAT_3N: data/hisat_3n/GRCh38

### Parameters you should probably double check

# Are you using the Windows subsystem for linux? 0 = Yes, 1 = No
WSL: 1

# If TRUE, hisat-3n will be used for alignment
use_hisat3n: FALSE

# If use_hisat3n TRUE, then this specifies path to hisat_3n
hisat3n_path: hisat-3n

# Number of cpus to be used by pieline
cpus: 20

# Number of reads per fragment when splitting up bam file
fragment_size: 25000

# Format of reads
FORMAT: "PE" # (PE, SE, NU)
                    # [SE - single end reads]
                    # [NU - including non-unique] (not tested)



# Organism
SPECIES: "Hs" # (Mm, Dm, Hs) [default: Mm]

# Sequencing reads strandness relative to RNA transcript [depends on library prep and sequencing output]
READS: "RF" # (FR, RF, F)
                    # [FR - STL-seq]
                    # [RF - Clonetech v2]

# Type of browser tracks to generate
mut_tracks: "TC" # ("TC", "GA", "TC,GA")

# Program used for creating browser tracks
track_prog: "STAR" # (STAR, bedtools)

# Add a 'chr' to each chromosome number during alignment. [Useful when aliner index is number-based, but GTF annotation is chr-based]
chr_tag: "TRUE"

# whether to make .tdf files or not
make_tracks: True

# Minimum base quality to call mutation
minqual: 40

# Which columns to keep in final cB.csv.gz file
keepcols: "sample,sj,io,ei,ai,GF,XF,rname"


######## Parameters you should NEVER alter ########
awkscript: workflow/scripts/fragment_sam.awk
mutcall: workflow/scripts/mut_call.py
mutcnt: workflow/scripts/count_triple.py
count2tracks: workflow/scripts/count_to_tracks.py
