configfile: "config/config.yaml"

FORMAT = config['FORMAT']

SAMP_NAMES = list(config['samples'].keys())

PAIRS = [1, 2]

def get_input_fastqs(wildcards):
    return config["samples"][wildcards.sample]

if FORMAT == 'PE':
    rule all:
        input:
            expand("results/fastq_cut/{S_ID}.t.r{pair}.fastq", S_ID=SAMP_NAMES, pair=PAIRS)
else:
    rule all:
        input:
            expand("results/fastq_cut/{S_ID}.t.fastq", S_ID=SAMP_NAMES)


if FORMAT == 'PE':


    rule preprocess:
        input:
            get_input_fastqs
        output:
            "results/fastq_cut/{sample}.t.r1.fastq",
            "results/fastq_cut/{sample}.t.r2.fastq"
        log:
            "logs/preprocess/{sample}.log"
        threads: 20
        shell:
            "workflow/scripts/preprocess_all.sh {config[cpus]} {wildcards.sample} {input} {config[FORMAT]} {output}"

    # rule align:
    #     input:
    #         "results/fastq_cut/{sample}.t.r1.fastq",
    #         "results/fastq_cut/{sample}.t.r2.fastq"
    #     output:
    #         "results/bams/{sample}Aligned.out.bam"
    #     log:
    #         "logs/align/{sample}.log"
    #     threads: 20
    #     shell:
    #         "workflow/scripts/hisat2.sh {config[cpus]} {wildcards.sample} {input} {config[FORMAT]} {config[]} {output}"
else:

    rule preprocess:
        input:
            get_input_fastqs
        output:
            "results/fastq_cut/{sample}.t.fastq"
        log:
            "logs/sort_filter/{sample}.log"
        threads: 20
        shell:
            "workflow/scripts/preprocess_all.sh {config[cpus]} {wildcards.sample} {input} {config[FORMAT]} {output}"
